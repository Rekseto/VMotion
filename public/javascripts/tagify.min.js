function Tagify(t,e){return t?(e="object"==typeof e?e:{},this.settings={duplicates:e.duplicates||!1,enforeWhitelist:e.enforeWhitelist||!1,autocomplete:e.autocomplete||!0,whitelist:e.whitelist||[],blacklist:e.blacklist||[]},this.id=Math.random().toString(36).substr(2,9),this.value=[],this.DOM={},this.build(t),void this.events()):(console.warn("Tagify: ","invalid input element ",t),this)}Tagify.prototype={build:function(t){var e=t.value;this.DOM.originalInput=t,this.DOM.scope=document.createElement("tags"),this.DOM.scope.innerHTML='<div><input list="tagsSuggestions'+this.id+'" class="placeholder"/><span>'+t.placeholder+"</span></div>",this.DOM.input=this.DOM.scope.querySelector("input"),t.parentNode.insertBefore(this.DOM.scope,t),this.DOM.scope.appendChild(t),this.settings.autocomplete&&this.settings.whitelist.length&&this.buildDataList(),e&&this.addTag(e).forEach(function(t){t&&t.classList.add("tagify--noAnim")})},events:function(){var t={focus:["onFocusBlur","input"],blur:["onFocusBlur","input"],input:["onInput","input"],keydown:["onKeydown","input"],click:["onClickScope","scope"]};for(var e in t)this.DOM[t[e][1]].addEventListener(e,this.callbacks[t[e][0]].bind(this))},callbacks:{onFocusBlur:function(t){var e=t.target.value.trim();"focus"==t.type?t.target.className="input":"blur"==t.type&&""==e&&(t.target.className="input placeholder",this.DOM.input.removeAttribute("style"))},onKeydown:function(t){var e=t.target.value;if("Backspace"!=t.key||""!=e&&8203!=e.charCodeAt(0)||this.removeTag(this.DOM.scope.querySelectorAll("tag:not(.tagify--hide)").length-1),"Escape"==t.key&&(t.target.value="",t.target.blur()),"Enter"==t.key)return t.preventDefault(),this.addTag(e)&&(t.target.value=""),!1},onInput:function(t){var e=t.target.value;e[e.length-1];t.target.style.width=7*(t.target.value.length+1)+"px",e.indexOf(",")!=-1&&(this.addTag(e),t.target.value="")},onClickScope:function(t){"TAGS"==t.target.tagName&&this.DOM.input.focus(),"X"==t.target.tagName&&this.removeTag(this.getNodeIndex(t.target.parentNode))}},buildDataList:function(){var t,e="",i="<datalist id='tagsSuggestions"+this.id+"'>                             <label>                                 select from the list:                                 <select>                                     <option value=''></option>                                     [OPTIONS]                                 </select>                             </label>                         </datalist>";for(t=this.settings.whitelist.length;t--;)e+="<option>"+this.settings.whitelist[t]+"</option>";return i=i.replace("[OPTIONS]",e),this.DOM.input.insertAdjacentHTML("afterend",i),i},getNodeIndex:function(t){for(var e=0;t=t.previousSibling;)3==t.nodeType&&/^\s*$/.test(t.data)||e++;return e},markTagByValue:function(t){var e=this.value.findIndex(function(e){return t.toLowerCase()===e.toLowerCase()}),i=this.DOM.scope.querySelectorAll("tag")[e];return!!i&&(i.classList.add("tagify--mark"),setTimeout(function(){i.classList.remove("tagify--mark")},2e3),!0)},isTagBlacklisted:function(t){return t=t.split(" "),this.settings.blacklist.filter(function(e){return t.indexOf(e)!=-1}).length},isTagWhitelisted:function(t){return this.settings.whitelist.indexOf(t)!=-1},addTag:function(t){var e=this;if(this.DOM.input.removeAttribute("style"),t=t.trim())return t.split(",").filter(function(t){return!!t}).map(function(t){var i=document.createElement("tag");return t=t.trim(),!(!e.settings.duplicates&&e.markTagByValue(t))&&((e.isTagBlacklisted(t)||e.settings.enforeWhitelist&&!e.isTagWhitelisted(t))&&(i.classList.add("tagify--notAllowed"),setTimeout(function(){e.removeTag(e.getNodeIndex(i))},1e3)),i.innerHTML="<x></x><div><span title='"+t+"'>"+t+" </span></div>",e.DOM.scope.insertBefore(i,e.DOM.input.parentNode),e.value.push(t),e.update(),i)})},removeTag:function(t){var e=this.DOM.scope.children[t];e&&(e.style.width=parseFloat(window.getComputedStyle(e).width)+"px",document.body.clientTop,e.classList.add("tagify--hide"),setTimeout(function(){e.parentNode.removeChild(e)},400),this.value.splice(t,1),this.update())},update:function(){this.DOM.originalInput.value=this.value.join(", ")}};